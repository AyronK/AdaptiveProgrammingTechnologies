<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <targets>
    <target name="guiLog" xsi:type="File" fileName="guiLog.txt" />

    <target name="guiDBLog" xsi:type="Database">
      <!--
  Remarks:
    The appsetting layouts require the NLog.Extended assembly.
    The aspnet-* layouts require the NLog.Web assembly.
    The Application value is determined by an AppName appSetting in Web.config.
    The "NLogDb" connection string determines the database that NLog write to.
    The create dbo.Log script in the comment below must be manually executed.
  -->

      <connectionStringName>Reflector</connectionStringName>

      <!--
  Script for creating the dbo.Log table.
      
  CREATE TABLE [dbo].[Log] 
    (
	  [Id] [int] IDENTITY(1,1) NOT NULL,
	  [Logged] [datetime] NOT NULL,
	  [Level] [nvarchar](50) NOT NULL,
	  [Message] [nvarchar](max) NOT NULL,
	  [Callsite] [nvarchar](max) NULL,
	  [Exception] [nvarchar](max) NULL,
    CONSTRAINT [PK_dbo.Log] PRIMARY KEY CLUSTERED ([Id] ASC)
    ) 
  -->

      <commandText>
        insert into dbo.Log (Logged, Level, Message, CallSite, Exception) 
        values (@Logged, @Level, @Message, @Callsite, @Exception);
      </commandText>

      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />
      <parameter name="@callSite" layout="${callsite}" />
      <parameter name="@exception" layout="${exception:tostring}" />
    </target>
  </targets>

  <rules>
    <logger name="*" minlevel="Info" writeTo="guiDBLog" />
  </rules>

</nlog>